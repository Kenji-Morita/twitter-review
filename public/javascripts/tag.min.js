riot.tag("commonfooter",'<footer class="sg-footer"><div class="sg-container"><p>(c)2015 SAW</p></div></footer>',function(t){}),riot.tag("commonheader",'<header class="sg-header"><div class="sg-container"><ul class="sg-header-contents"><li><h1>SAW Twitter</h1></li><li if="{opts.isLogin}"><a href="#">Setting</a><ul><li><a href="#">Setting</a></li><li><a href="#" onclick="{doSignOut}">Sign out</a></li></ul></li></ul></div></header>',function(t){var e=window.superagent;this.doSignOut=function(t){t.preventDefault(),e.post("api/auth/signout").withCredentials().end(function(t,e){e.ok&&location.reload()})},this.mixin({observable:riot.observable()})}),riot.tag("signforms",'<ul><li if="{!toggleState}"><a href="#" onclick="{toggle}">Sign in</a></li><li if="{toggleState}"><a href="#" onclick="{toggle}">Sign up</a></li></ul><form class="pg-sign-in" if="{toggleState}" onsubmit="{doSignIn}"><label if="{signIn.account.isEmpty}">Please input Mail Address or Name!</label><input type="text" name="account" placeholder="Mail address or Name"><label if="{signIn.password.isEmpty}">Please input Password!</label><input type="password" name="signInPassword" placeholder="Password"><button>Sign in</button></form><form class="pg-sign-up" if="{!toggleState}" onsubmit="{doSignUp}"><label if="{signUp.screenName.isEmpty}">Please input Account Name!</label><input type="text" name="screenName" placeholder="Account Name"><label if="{signUp.mail.isEmpty}">Please input Mail Address!</label><input type="mail" name="mail" placeholder="Mail address"><label if="{signUp.password.isEmpty}">Please input Password!</label><input type="password" name="signUpPassword" placeholder="Password"><label if="{signUp.passwordConfirm.isEmpty}">Please input Password again!</label><input type="password" name="signUpPasswordConfirm" placeholder="Password confirm"><button>Sign up</button></form>',function(t){var e=this,i=window.superagent;this.toggleState=!0,this.signIn={account:{isEmpty:!1},password:{isEmpty:!1}},this.signUp={screenName:{isEmpty:!1},mail:{isEmpty:!1},password:{isEmpty:!1},passwordConfirm:{isEmpty:!1}},this.toggle=function(t){t.preventDefault(),e.toggleState=!e.toggleState},this.doSignIn=function(t){t.preventDefault();var s=e.account.value.trim(),a=e.signInPassword.value.trim();e.signIn.account.isEmpty=""==s,e.signIn.password.isEmpty=""==a,e.signIn.account.isEmpty||e.signIn.password.isEmpty||i.post("api/auth/signin").withCredentials().send({screenName:s,mail:s,password:a}).set("Accept","application/json").end(function(t,e){if(e.ok)location.reload();else{var i=JSON.parse(e.text);console.log(i.reason)}})},this.doSignUp=function(t){t.preventDefault();var i=e.screenName.value.trim(),s=e.mail.value.trim(),a=e.signUpPassword.value.trim(),n=e.signUpPasswordConfirm.value.trim();e.signUp.screenName.isEmpty=""==i,e.signUp.mail.isEmpty=""==s,e.signUp.password.isEmpty=""==a,e.signUp.passwordConfirm.isEmpty=""==n,e.signUp.screenName.isEmpty||e.signUp.mail.isEmpty||e.signUp.password.isEmpty||e.signUp.passwordConfirm.isEmpty}}),riot.tag("timeline",'<ul class="pg-timeline"><li class="pg-timeline-tweet" each="{tweets}"><img src="http://placehold.jp/64x64.png"><h3><a href="#">screenName</a></h3><p data-tweet-id="{tweetId}">{text}</p><time><a href="#">{postedAt}</a></time></li></ul>',function(t){var e=this,i=window.superagent;this.tweets=[];var s=function(){var a="/api/timeline/"+t.target;e.tweets.length>0&&(a+="?after="+e.tweets[0].timestamp),i.get(a).withCredentials().end(function(t,i){if(i.ok){var s=JSON.parse(i.text);s.value.tweets.forEach(function(t){e.tweets.push({tweetId:t.tweetId,text:t.text,postedAt:t.postedAt,timestamp:t.timestamp})}),e.update()}}),setTimeout(s,1e4)};s()});